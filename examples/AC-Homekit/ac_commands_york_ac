#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
//#include <task.h>
#include <ir/ir.h>
#include <ir/raw.h>
#include "ac_commands.h"

//Below codes are for YORK AC
 int16_t Fan[] = {3723, -1646,   484, -1152,   515, -1155,   514,  -529,   539,  -503,   539,  -505,   541, -1128,   543,  -501,
 540,  -503,   541, -1128,   542, -1128,   543,  -499,   543, -1128,   540,  -504,   548,  -495,   544, -1125,
 542, -1127,   547,  -495,   547, -1122,   545, -1125,   548,  -495,   549,  -494,   549, -1121,   547,  -496,
 549,  -495,   546, -1122,   549,  -495,   550,  -493,   548,  -496,   551,  -492,   550,  -494,   550,  -490,
 551,  -492,   549,  -494,   551,  -492,   551,  -491,   551,  -492,   576,  -466,   551,  -491,   551,  -493,
 574,  -469,   550,  -493,   550,  -492,   575, -1093,   551,  -492,   575,  -467,   577, -1093,   553,  -491,
 575,  -469,   575, -1094,   552, -1120,   577,  -466,   552,  -491,   556,  -488,   576,  -468,   552,  -491,
 606,  -434,   553, -1121,   575, -1095,   577, -1092,   552, -1117,   578,  -468,   551,  -493,   550,  -493,
 576,  -468,   551,  -493,   552,  -490,   552,  -491,   577,  -468,   549, -1118,   551,  -493,   550,  -493,
 551,  -493,   550,  -494,   550,  -493,   550,  -494,   549,  -493,   551,  -493,   549,  -494,   549,  -495,
 551,  -493,   548,  -497,   544,  -498,   548,  -494,   547,  -497,   543,  -500,   545,  -498,   542,  -502,
 539,  -503,   543,  -500,   542,  -499,   514,  -528,   542,  -501,   515,  -528,   514,  -535,   509,  -528,
 513,  -529,   512,  -529,   512,  -531,   511,  -532,   510,  -532,   511,  -532,   511,  -534,   510,  -531,
 510,  -534,   531, -1138,   531, -1139,   532,  -511,   533, -1137,   532, -1137,   532,  -510,   533, -1137,
 511,  -533,   531}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_16[] = {3723, -1646,   484, -1152,   515, -1155,   514,  -529,   539,  -503,   539,  -505,   541, -1128,   543,  -501,
 540,  -503,   541, -1128,   542, -1128,   543,  -499,   543, -1128,   540,  -504,   548,  -495,   544, -1125,
 542, -1127,   547,  -495,   547, -1122,   545, -1125,   548,  -495,   549,  -494,   549, -1121,   547,  -496,
 549,  -495,   546, -1122,   549,  -495,   550,  -493,   548,  -496,   551,  -492,   550,  -494,   550,  -490,
 551,  -492,   549,  -494,   551,  -492,   551,  -491,   551,  -492,   576,  -466,   551,  -491,   551,  -493,
 574,  -469,   550,  -493,   550,  -492,   575, -1093,   551,  -492,   575,  -467,   577, -1093,   553,  -491,
 575,  -469,   575, -1094,   552, -1120,   577,  -466,   552,  -491,   556,  -488,   576,  -468,   552,  -491,
 606,  -434,   553, -1121,   575, -1095,   577, -1092,   552, -1117,   578,  -468,   551,  -493,   550,  -493,
 576,  -468,   551,  -493,   552,  -490,   552,  -491,   577,  -468,   549, -1118,   551,  -493,   550,  -493,
 551,  -493,   550,  -494,   550,  -493,   550,  -494,   549,  -493,   551,  -493,   549,  -494,   549,  -495,
 551,  -493,   548,  -497,   544,  -498,   548,  -494,   547,  -497,   543,  -500,   545,  -498,   542,  -502,
 539,  -503,   543,  -500,   542,  -499,   514,  -528,   542,  -501,   515,  -528,   514,  -535,   509,  -528,
 513,  -529,   512,  -529,   512,  -531,   511,  -532,   510,  -532,   511,  -532,   511,  -534,   510,  -531,
 510,  -534,   531, -1138,   531, -1139,   532,  -511,   533, -1137,   532, -1137,   532,  -510,   533, -1137,
 511,  -533,   531};

 int16_t Cool_17[] = {3719, -1652,   502, -1136,   532, -1135,   533,  -509,   532,  -508,   533,  -509,   532, -1136,   532,  -507,
 532,  -512,   532, -1135,   534, -1135,   532,  -510,   533, -1136,   532,  -509,   534,  -508,   534, -1135,
 534, -1134,   534,  -509,   534, -1135,   532, -1138,   532,  -510,   533,  -509,   534, -1135,   534,  -510,
 533,  -510,   535, -1131,   536,  -509,   534,  -510,   534,  -509,   532,  -511,   533,  -510,   532,  -509,
 533,  -508,   532,  -510,   534,  -510,   532,  -510,   533,  -509,   534,  -510,   533,  -508,   534,  -509,
 533,  -511,   532,  -511,   533,  -509,   534, -1135,   534,  -510,   532,  -509,   533, -1135,   534,  -509,
 533,  -510,   532, -1137,   532, -1136,   533,  -509,   533,  -508,   533,  -510,   534,  -510,   534,  -510,
 532,  -510,   533,  -509,   534, -1138,   532, -1136,   533, -1136,   532,  -510,   534,  -508,   533,  -510,
 533,  -510,   533,  -509,   534,  -510,   533,  -508,   533,  -510,   534, -1134,   533,  -509,   533,  -508,
 533,  -509,   533,  -510,   531,  -509,   534,  -509,   534,  -509,   532,  -509,   533,  -509,   535,  -507,
 533,  -511,   531,  -511,   534,  -512,   539,  -529,   507,  -508,   532,  -510,   532,  -509,   533,  -509,
 532,  -509,   534,  -509,   532,  -512,   532,  -509,   534,  -510,   532,  -510,   534,  -509,   534,  -509,
 535,  -507,   533,  -508,   534,  -510,   533,  -509,   534,  -507,   535,  -509,   534,  -509,   534,  -509,
 533,  -510,   533,  -510,   534, -1135,   533,  -508,   533, -1136,   533, -1134,   533,  -508,   535, -1134,
 534,  -511,   532}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_18[] = {3787, -1563,   595, -1069,   600, -1071,   598,  -442,   602,  -441,   602,  -442,   601, -1072,   597,  -440,
 602,  -443,   602, -1071,   597, -1070,   599,  -442,   600, -1073,   596,  -444,   601,  -441,   602, -1073,
 597, -1071,   599,  -441,   601, -1073,   596, -1099,   571,  -442,   602,  -441,   601, -1098,   572,  -443,
 600,  -443,   603, -1070,   599,  -441,   602,  -443,   601,  -442,   601,  -441,   602,  -442,   602,  -442,
 601,  -442,   601,  -441,   603,  -443,   601,  -443,   601,  -442,   601,  -443,   601,  -441,   602,  -442,
 601,  -443,   600,  -442,   602,  -441,   602, -1070,   599,  -442,   576,  -467,   601, -1071,   599,  -443,
 601,  -443,   602, -1069,   599, -1073,   598,  -442,   602,  -442,   600,  -442,   576,  -468,   602,  -442,
 602,  -442,   600, -1072,   598,  -443,   602, -1070,   597, -1073,   597,  -442,   601,  -441,   603,  -442,
 602,  -438,   603,  -444,   599,  -442,   602,  -442,   602,  -441,   600, -1072,   600,  -441,   603,  -443,
 600,  -442,   601,  -441,   603,  -440,   603,  -442,   602,  -441,   603,  -441,   602,  -443,   599,  -442,
 600,  -440,   579,  -467,   600,  -442,   601,  -443,   602,  -441,   602,  -442,   601,  -441,   601,  -442,
 601,  -441,   601,  -444,   600,  -442,   601,  -441,   601,  -441,   601,  -442,   601,  -442,   601,  -442,
 602,  -441,   600,  -442,   602,  -443,   600,  -443,   600,  -443,   600,  -443,   601,  -443,   575,  -466,
 602,  -442,   601, -1097,   570,  -443,   599,  -443,   598, -1076,   594, -1072,   596,  -442,   600, -1071,
 598,  -443,   601}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_19[] = {3789, -1585,   572, -1066,   602, -1070,   600,  -441,   603,  -441,   601,  -443,   602, -1097,   573,  -439,
 603,  -442,   603, -1069,   599, -1070,   601,  -439,   604, -1072,   598,  -440,   604,  -440,   602, -1070,
 602, -1097,   577,  -447,   568, -1094,   595, -1098,   573,  -441,   602,  -442,   601, -1067,   603,  -442,
 602,  -441,   603, -1069,   599,  -442,   602,  -441,   602,  -442,   602,  -442,   601,  -443,   601,  -441,
 602,  -440,   603,  -442,   601,  -443,   601,  -440,   602,  -441,   602,  -441,   603,  -440,   602,  -440,
 603,  -442,   601,  -443,   602,  -439,   603, -1068,   601,  -441,   603,  -439,   603, -1069,   600,  -442,
 603,  -442,   601, -1070,   598, -1069,   600,  -440,   602,  -439,   603,  -441,   603,  -440,   603,  -440,
 603,  -441,   602,  -441,   602,  -441,   602, -1098,   572, -1068,   601,  -440,   604,  -442,   601,  -441,
 602,  -441,   603,  -440,   604,  -439,   602,  -442,   601,  -442,   602, -1066,   601,  -441,   602,  -444,
 599,  -442,   601,  -442,   601,  -441,   603,  -441,   603,  -440,   602,  -441,   602,  -441,   602,  -442,
 601,  -441,   602,  -443,   600,  -442,   601,  -440,   602,  -442,   601,  -442,   601,  -441,   601,  -441,
 602,  -440,   602,  -440,   602,  -441,   603,  -440,   603,  -440,   603,  -441,   602,  -440,   603,  -440,
 603,  -442,   600,  -443,   602,  -442,   601,  -446,   599,  -441,   601,  -441,   602,  -441,   602,  -442,
 601,  -440,   602,  -442,   601,  -441,   602,  -442,   602, -1070,   597, -1072,   598,  -443,   602, -1071,
 599,  -441,   601}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_20[] = {3783, -1560,   596, -1069,   600, -1069,   600,  -443,   601,  -440,   601,  -442,   602, -1070,   600,  -440,
 601,  -442,   602, -1067,   602,  -990,   677,  -440,   603, -1068,   601,  -442,   601,  -439,   602, -1069,
 600, -1068,   599,  -440,   602, -1065,   602, -1066,   602,  -368,   677,  -439,   602, -1068,   600,  -441,
 602,  -362,   681, -1067,   602,  -441,   601,  -443,   601,  -441,   603,  -369,   674,  -440,   604,  -439,
 603,  -443,   600,  -443,   600,  -442,   602,  -441,   602,  -442,   601,  -442,   601,  -439,   601,  -442,
 601,  -441,   601,  -362,   682,  -440,   602, -1070,   599,  -442,   601,  -442,   601, -1069,   601,  -441,
 602,  -442,   601, -1069,   600, -1069,   600,  -442,   601,  -440,   600,  -443,   600,  -441,   602,  -443,
 601,  -362,   680, -1070,   601, -1069,   600,  -441,   602, -1068,   602,  -439,   603,  -437,   604,  -435,
 607,  -363,   682,  -439,   603,  -441,   601,  -441,   602,  -442,   601, -1069,   600,  -361,   682,  -441,
 602,  -441,   600,  -442,   602,  -441,   602,  -441,   601,  -441,   603,  -441,   603,  -441,   601,  -441,
 603,  -441,   601,  -444,   600,  -441,   602,  -441,   601,  -441,   602,  -440,   603,  -441,   600,  -441,
 602,  -442,   601,  -445,   597,  -432,   610,  -441,   601,  -441,   601,  -441,   602,  -442,   601,  -443,
 601,  -441,   600,  -442,   601,  -440,   603,  -440,   601,  -441,   603,  -441,   600,  -442,   600,  -443,
 601,  -440,   602, -1070,   599, -1070,   599, -1070,   600,  -442,   602, -1071,   598,  -440,   602, -1070,
 599,  -444,   600}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_21[] = {3781, -1591,   572, -1070,   598, -1070,   599,  -442,   603,  -439,   603,  -442,   602, -1070,   599,  -441,
 601,  -444,   600, -1070,   600, -1070,   597,  -443,   600, -1071,   599,  -442,   601,  -441,   602, -1070,
 598, -1070,   599,  -441,   602, -1068,   600, -1069,   599,  -442,   602,  -439,   602, -1071,   598,  -442,
 601,  -444,   600, -1069,   599,  -443,   601,  -441,   602,  -441,   602,  -442,   601,  -442,   601,  -439,
 603,  -440,   602,  -442,   601,  -441,   602,  -441,   602,  -443,   602,  -441,   603,  -440,   603,  -442,
 601,  -443,   602,  -440,   604,  -441,   602, -1070,   600,  -442,   602,  -441,   602, -1070,   601,  -441,
 603,  -442,   601, -1069,   601, -1071,   598,  -443,   600,  -441,   601,  -444,   601,  -442,   601,  -441,
 603,  -442,   602,  -441,   601, -1070,   599,  -440,   602, -1066,   601,  -442,   602,  -443,   601,  -443,
 600,  -441,   602,  -441,   601,  -439,   602,  -443,   600,  -443,   601, -1068,   600,  -441,   603,  -441,
 600,  -441,   602,  -443,   602,  -441,   602,  -442,   600,  -442,   602,  -441,   602,  -442,   602,  -441,
 602,  -441,   602,  -441,   601,  -372,   672,  -440,   602,  -442,   602,  -442,   602,  -441,   601,  -442,
 602,  -442,   601,  -443,   599,  -440,   602,  -441,   601,  -442,   601,  -442,   601,  -444,   600,  -442,
 602,  -443,   600,  -442,   602,  -440,   578,  -467,   601,  -442,   602,  -442,   600,  -442,   602,  -442,
 601,  -444,   601,  -442,   600, -1072,   597, -1070,   599,  -444,   600, -1069,   600,  -442,   603, -1068,
 599,  -442,   601}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_22[] = {3786, -1564,   594, -1068,   600, -1070,   599,  -442,   601,  -441,   601,  -443,   601, -1072,   598,  -440,
 603,  -443,   601, -1068,   600, -1070,   599,  -441,   602, -1068,   600,  -364,   680,  -440,   603, -1069,
 600, -1068,   602,  -440,   603, -1067,   601, -1071,   598,  -441,   603,  -439,   603, -1067,   603,  -440,
 600,  -440,   602, -1068,   600,  -442,   601,  -440,   603,  -440,   603,  -441,   601,  -438,   603,  -440,
 604,  -440,   601,  -442,   601,  -442,   601,  -440,   580,  -493,   547,  -464,   600,  -442,   601,  -440,
 602,  -441,   601,  -442,   602,  -439,   602, -1070,   599,  -442,   602,  -441,   601, -1069,   602,  -442,
 601,  -440,   602, -1099,   573, -1070,   598,  -440,   602,  -441,   603,  -442,   599,  -441,   603,  -442,
 600,  -440,   602, -1071,   596,  -442,   602,  -441,   599, -1098,   571,  -441,   602,  -440,   603,  -441,
 602,  -441,   603,  -441,   600,  -443,   601,  -443,   601,  -440,   602, -1071,   598,  -442,   602,  -441,
 603,  -440,   603,  -441,   602,  -368,   675,  -441,   602,  -441,   602,  -442,   601,  -442,   600,  -442,
 601,  -441,   602,  -441,   601,  -439,   601,  -441,   602,  -440,   602,  -365,   678,  -441,   601,  -442,
 602,  -441,   603,  -439,   602,  -443,   601,  -442,   601,  -442,   602,  -442,   601,  -443,   601,  -440,
 601,  -443,   601,  -441,   602,  -444,   600,  -442,   603,  -441,   602,  -440,   602,  -441,   602,  -441,
 601,  -442,   601, -1070,   598,  -443,   600, -1070,   600,  -440,   603, -1069,   600,  -443,   601, -1071,
 598,  -442,   601}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_23[] = {3782, -1585,   571, -1069,   600, -1067,   602,  -443,   600,  -441,   601,  -444,   601, -1068,   601,  -440,
 601,  -443,   601, -1071,   599, -1072,   596,  -442,   601, -1073,   597,  -442,   601,  -441,   601, -1071,
 600, -1070,   599,  -442,   601, -1071,   598, -1097,   570,  -443,   600,  -441,   577, -1120,   571,  -443,
 601,  -442,   601, -1070,   598,  -444,   599,  -444,   601,  -441,   601,  -442,   603,  -442,   600,  -441,
 601,  -441,   603,  -440,   602,  -443,   600,  -442,   602,  -442,   600,  -444,   601,  -440,   602,  -441,
 601,  -442,   602,  -441,   602,  -442,   600, -1069,   600,  -444,   600,  -441,   601, -1070,   598,  -443,
 600,  -441,   602, -1069,   601, -1069,   599,  -440,   601,  -442,   601,  -440,   602,  -442,   600,  -442,
 601,  -441,   601,  -442,   602,  -440,   601,  -444,   600, -1069,   601,  -440,   603,  -442,   601,  -443,
 601,  -442,   601,  -443,   601,  -443,   601,  -442,   602,  -439,   602, -1071,   597,  -441,   601,  -441,
 600,  -442,   601,  -442,   602,  -441,   602,  -441,   601,  -441,   601,  -442,   601,  -439,   601,  -444,
 600,  -441,   602,  -443,   600,  -444,   600,  -441,   601,  -443,   600,  -440,   601,  -442,   602,  -441,
 602,  -442,   600,  -443,   600,  -442,   602,  -442,   599,  -442,   599,  -443,   601,  -441,   601,  -443,
 602,  -442,   600,  -443,   600,  -443,   600,  -441,   601,  -441,   600,  -444,   599,  -444,   599,  -443,
 600,  -442,   602,  -442,   599,  -444,   600, -1068,   599,  -441,   602, -1069,   575,  -468,   601, -1070,
 633,  -439,   545}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_24[] = {3785, -1585,   571, -1071,   599, -1069,   601,  -442,   601,  -439,   602,  -441,   602, -1070,   598,  -441,
 600,  -444,   599, -1068,   601, -1069,   599,  -442,   600, -1071,   597,  -443,   600,  -440,   602, -1071,
 598, -1068,   599,  -440,   602, -1070,   597, -1069,   598,  -444,   599,  -443,   598, -1071,   599,  -443,
 601,  -443,   601, -1068,   599,  -442,   600,  -441,   601,  -442,   602,  -443,   602,  -441,   601,  -441,
 601,  -442,   602,  -441,   600,  -442,   602,  -440,   602,  -441,   601,  -442,   600,  -441,   600,  -443,
 599,  -443,   601,  -440,   601,  -442,   601, -1072,   598,  -443,   600,  -442,   601, -1072,   596,  -443,
 600,  -443,   600, -1071,   598, -1097,   570,  -443,   600,  -441,   601,  -442,   601,  -441,   579,  -466,
 602,  -441,   600, -1073,   597, -1072,   598, -1070,   599,  -442,   602,  -441,   601,  -441,   599,  -443,
 600,  -443,   601,  -442,   600,  -443,   601,  -443,   601,  -441,   601, -1072,   598,  -440,   603,  -442,
 600,  -443,   600,  -442,   599,  -443,   599,  -443,   601,  -441,   601,  -443,   599,  -442,   601,  -440,
 601,  -442,   601,  -443,   599,  -443,   600,  -442,   601,  -442,   600,  -443,   601,  -443,   600,  -442,
 601,  -444,   599,  -443,   599,  -443,   602,  -441,   601,  -443,   601,  -442,   601,  -443,   600,  -444,
 599,  -443,   600,  -443,   600,  -444,   601,  -442,   600,  -442,   598,  -444,   600,  -442,   602,  -441,
 600,  -444,   601, -1073,   595, -1070,   597,  -443,   599,  -444,   600, -1072,   597,  -442,   600, -1071,
 599,  -443,   599}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_25[] = { 3788, -1560,   597, -1068,   601, -1070,   598,  -442,   602,  -439,   602,  -442,   600, -1070,   598,  -441,
 602,  -442,   601, -1070,   599, -1069,   599,  -440,   602, -1068,   601,  -441,   601,  -441,   602, -1073,
 597, -1097,   573,  -442,   600, -1068,   601, -1069,   600,  -443,   601,  -442,   600, -1074,   596,  -442,
 602,  -442,   602, -1069,   598,  -440,   601,  -443,   601,  -442,   600,  -442,   600,  -441,   602,  -441,
 600,  -368,   674,  -440,   602,  -442,   601,  -441,   602,  -441,   602,  -441,   600,  -440,   602,  -442,
 601,  -443,   599,  -439,   581,  -463,   603, -1069,   599,  -441,   601,  -441,   601, -1067,   601,  -441,
 601,  -443,   601, -1067,   600, -1066,   601,  -368,   675,  -354,   686,  -441,   601,  -443,   600,  -441,
 601,  -441,   602,  -441,   602, -1067,   601, -1070,   599,  -441,   602,  -443,   600,  -442,   602,  -441,
 602,  -441,   602,  -440,   602,  -441,   602,  -442,   601,  -440,   603, -1070,   599,  -442,   601,  -441,
 602,  -440,   603,  -440,   603,  -442,   601,  -442,   601,  -441,   602,  -441,   602,  -441,   601,  -442,
 602,  -443,   601,  -441,   602,  -442,   601,  -440,   603,  -441,   602,  -442,   600,  -442,   601,  -442,
 601,  -441,   601,  -441,   602,  -441,   601,  -440,   604,  -440,   601,  -441,   601,  -440,   602,  -440,
 601,  -441,   602,  -440,   601,  -442,   601,  -443,   599,  -441,   601,  -440,   601,  -441,   601,  -443,
 600,  -441,   602,  -443,   600, -1068,   600,  -442,   601,  -441,   601, -1097,   571,  -444,   601, -1069,
 599,  -442,   601}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_26[] = {3789, -1583,   573, -1069,   600, -1067,   602,  -442,   602,  -441,   601,  -442,   601, -1069,   600,  -440,
 601,  -442,   602, -1066,   601, -1069,   600,  -441,   602, -1071,   599,  -364,   681,  -439,   603, -1069,
 601, -1068,   602,  -441,   602, -1072,   597, -1070,   600,  -366,   676,  -441,   601, -1072,   598,  -442,
 602,  -442,   602, -1070,   598,  -442,   602,  -443,   600,  -442,   600,  -444,   600,  -442,   600,  -440,
 601,  -441,   602,  -442,   600,  -442,   601,  -443,   602,  -440,   602,  -442,   602,  -439,   602,  -442,
 602,  -440,   603,  -439,   602,  -441,   601, -1069,   599,  -441,   601,  -442,   601, -1068,   602,  -441,
 602,  -442,   600, -1071,   599, -1067,   599,  -442,   601,  -439,   602,  -441,   602,  -441,   601,  -440,
 602,  -441,   602, -1069,   598,  -370,   651, -1093,   600,  -442,   602,  -442,   601,  -366,   677,  -443,
 601,  -442,   602,  -440,   601,  -439,   603,  -441,   602,  -442,   601, -1069,   600,  -443,   601,  -441,
 603,  -441,   602,  -441,   604,  -441,   601,  -441,   603,  -361,   683,  -441,   602,  -441,   602,  -442,
 602,  -441,   601,  -443,   602,  -440,   603,  -439,   601,  -443,   600,  -441,   601,  -443,   602,  -442,
 601,  -441,   602,  -442,   602,  -441,   601,  -442,   601,  -442,   602,  -442,   602,  -441,   602,  -442,
 601,  -442,   600,  -441,   600,  -441,   602,  -440,   603,  -442,   601,  -440,   601,  -443,   600,  -442,
 600,  -443,   601, -1070,   599,  -441,   602,  -443,   602,  -443,   601, -1069,   601,  -442,   658, -1007,
 606,  -441,   601}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_27[] = {3692}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_28[] = {601}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_29[] = {577}; //AnalysIR Batch Export (IRremote) - RAW
 int16_t Cool_30[] = {576}; //AnalysIR Batch Export (IRremote) - RAW


 int16_t Heat_16[] = {652};
 int16_t Heat_17[] = {-550};
 int16_t Heat_18[] = {648};
 int16_t Heat_19[] = {651};
 int16_t Heat_20[] = {653};
 int16_t Heat_21[] = {649};
 int16_t Heat_22[] = {655};
 int16_t Heat_23[] = {654};
 int16_t Heat_24[] = {657};
 int16_t Heat_25[] = {650};
 int16_t Heat_26[] = {650};
 int16_t Heat_27[] = {654};
 int16_t Heat_28[] = {651};
 int16_t Heat_29[] = {649};
 int16_t Heat_30[] = {649};


 int16_t Off[] = {3763, -1607,   547, -1093,   553, -1114,   578,  -468,   577,  -464,   578,  -466,   577, -1090,   578,  -466,
 579,  -465,   578, -1091,   577, -1091,   579,  -465,   578, -1093,   577,  -465,   578,  -465,   577, -1091,
 576, -1093,   579,  -465,   578, -1091,   577, -1091,   579,  -464,   579,  -464,   579, -1092,   578,  -464,
 578,  -464,   578, -1093,   577,  -465,   578,  -465,   578,  -465,   579,  -462,   578,  -466,   577,  -464,
 577,  -466,   576,  -466,   577,  -466,   579,  -464,   576,  -465,   577,  -467,   577,  -466,   575,  -467,
 577,  -466,   576,  -468,   576,  -466,   577,  -465,   577,  -467,   576,  -467,   578, -1089,   578,  -466,
 574,  -469,   576, -1090,   554, -1114,   575,  -467,   577,  -466,   577,  -464,   575,  -468,   578,  -464,
 578,  -467,   576, -1090,   576,  -467,   578, -1092,   576,  -464,   577,  -466,   578,  -464,   577,  -465,
 576,  -467,   577,  -465,   577,  -465,   578,  -464,   577,  -467,   577, -1091,   576,  -465,   577,  -466,
 576,  -466,   576,  -466,   577,  -465,   577,  -467,   575,  -471,   586,  -387,   641,  -465,   576,  -466,
 577,  -466,   551,  -492,   575,  -467,   577,  -466,   577,  -465,   577,  -467,   551,  -492,   552,  -491,
 575,  -467,   551,  -491,   575,  -468,   576,  -465,   576,  -468,   551,  -492,   574,  -468,   551,  -492,
 552,  -490,   551,  -491,   552,  -490,   550,  -493,   552,  -491,   577,  -466,   576,  -467,   552,  -493,
 576,  -466,   577, -1094,   574,  -468,   576, -1094,   549, -1116,   576,  -469,   577,  -467,   577, -1091,
 575,  -469,   551}; //AnalysIR Batch Export (IRremote) - RAW




 void ac_button_off(){

	ir_tx_init();
	ir_raw_send(Off, sizeof(Off) / sizeof(*Off));

}

 void ac_button_aut(){

	ir_tx_init();
	ir_raw_send(Fan, sizeof(Fan) / sizeof(*Fan));

}

void ac_command(int target_state, float target_temp){

int16_t *RawData;
uint16_t length1;

if(target_state == 2)
{
//Cool mode

		if (target_temp ==  16.0)
		{
		RawData = Cool_16;
		length1 = sizeof(Cool_16)/ sizeof(*Cool_16);
		}
		else if (target_temp ==  17.0)
		{
		RawData = Cool_17;
		length1 =sizeof(Cool_17)/ sizeof(*Cool_17);
		}
		else if (target_temp ==  18.0)
		{

		RawData = Cool_18;
		length1 = sizeof(Cool_18)/sizeof(*Cool_18);
		}
		else if (target_temp ==  19.0)
		{
		RawData = Cool_19;
		length1 = sizeof(Cool_19)/sizeof(*Cool_19);
		}
		else if (target_temp ==  20.0)
		{
		RawData = Cool_20;
		length1 = sizeof(Cool_20)/sizeof(*Cool_20);
		}
		else if (target_temp ==  21.0)
		{
		RawData = Cool_21;
		length1 = sizeof(Cool_21)/sizeof(*Cool_21);
		}
		else if (target_temp ==  22.0)
		{
		RawData = Cool_22;
		length1 =sizeof(Cool_22)/ sizeof(*Cool_22);
		}
		else if (target_temp ==  23.0)
		{
		RawData = Cool_23;
		length1 = sizeof(Cool_23)/sizeof(*Cool_23);
		}
		else if (target_temp ==  24.0)
		{
		RawData = Cool_24;
		length1 = sizeof(Cool_24)/sizeof(*Cool_24);
		}
		else if (target_temp ==  25.0)
		{
		RawData = Cool_25;
		length1 = sizeof(Cool_25)/sizeof(*Cool_25);
		}
		else if (target_temp ==  26.0)
		{
		RawData = Cool_26;
		length1 = sizeof(Cool_26)/sizeof(*Cool_26);
		}
		else if (target_temp ==  27.0)
		{
		RawData = Cool_27;
		length1 = sizeof(Cool_27)/sizeof(*Cool_27);
		}
		else if (target_temp ==  28.0)
		{
		RawData = Cool_28;
		length1 =sizeof(Cool_28)/ sizeof(*Cool_28);
		}
		else if (target_temp ==  29.0)
		{
		RawData = Cool_29;
		length1 = sizeof(Cool_29)/sizeof(*Cool_29);
		}
		else if (target_temp ==  30.0)
		{
		RawData = Cool_30;
		length1 = sizeof(Cool_30)/sizeof(*Cool_30);
		}

	}

	if( target_state == 1)
	{
		//Heat mode
		if (target_temp ==  16.0)
		{
		RawData = Heat_16;
		length1 = sizeof(Heat_16)/sizeof(*Heat_16);
		}
		else if (target_temp ==  17.0)
		{
		RawData = Heat_17;
		length1 = sizeof(Heat_17)/sizeof(*Heat_17);
		}
		else if (target_temp ==  18.0)
		{
		RawData = Heat_18;
		length1 = sizeof(Heat_18)/sizeof(*Heat_18);
		}
		else if (target_temp ==  19.0)
		{
		RawData = Heat_19;
		length1 = sizeof(Heat_19)/sizeof(*Heat_19);
		}
		else if (target_temp ==  20.0)
		{
		RawData = Heat_20;
		length1 = sizeof(Heat_20)/sizeof(*Heat_20);
		}
		else if (target_temp ==  21.0)
		{
		RawData = Heat_21;
		length1 = sizeof(Heat_21)/sizeof(*Heat_21);
		}
		else if (target_temp ==  22.0)
		{
		RawData = Heat_22;
		length1 = sizeof(Heat_22)/sizeof(*Heat_22);
		}
		else if (target_temp ==  23.0)
		{
		RawData = Heat_23;
		length1 = sizeof(Heat_23)/sizeof(*Heat_23);
		}
		else if (target_temp ==  24.0)
		{
		RawData = Heat_24;
		length1 = sizeof(Heat_24)/sizeof(*Heat_24);
		}
		else if (target_temp ==  25.0)
		{
		RawData = Heat_25;
		length1 = sizeof(Heat_25)/sizeof(*Heat_25);
		}
		else if (target_temp ==  26.0)
		{
		RawData = Heat_26;
		length1 = sizeof(Heat_26)/sizeof(*Heat_26);
		}
		else if (target_temp ==  27.0)
		{
		RawData = Heat_27;
		length1 = sizeof(Heat_27)/sizeof(*Heat_27);
		}
		else if (target_temp ==  28.0)
		{
		RawData = Heat_28;
		length1 = sizeof(Heat_28)/sizeof(*Heat_28);
		}
		else if (target_temp ==  29.0)
		{
		RawData = Heat_29;
		length1 = sizeof(Heat_29)/sizeof(*Heat_29);
		}
		else if (target_temp ==  30.0)
		{
		RawData = Heat_30;
		length1 = sizeof(Heat_30)/sizeof(*Heat_30);
		}

	}

	if( target_state == 0)
	{
		//printf("Fan mode\n", 30 );
		RawData = Off;
		length1 = sizeof(Off)/sizeof(*Off);
	}

	ir_tx_init();
	ir_raw_send(RawData, length1);


}
